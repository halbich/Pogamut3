
    		/**
         	IMPORTANT !!!

         	DO NOT EDIT THIS FILE. IT IS GENERATED FROM 
         	THE JavaClassesGenerator.xslt. MODIFY THAT FILE INSTEAD OF THIS ONE.
         
         	Use Ant task process-gb-messages after that to generate this file again.
         
         	IMPORTANT END !!!
        	*/
 			   	
    		package cz.cuni.amis.pogamut.ut2004.communication.messages.gbinfomessages;

            import java.util.*;import javax.vecmath.*;import cz.cuni.amis.pogamut.base.communication.messages.*;import cz.cuni.amis.pogamut.base.communication.worldview.*;import cz.cuni.amis.pogamut.base.communication.worldview.event.*;import cz.cuni.amis.pogamut.base.communication.worldview.object.*;import cz.cuni.amis.pogamut.multi.communication.worldview.object.*;import cz.cuni.amis.pogamut.base.communication.translator.event.*;import cz.cuni.amis.pogamut.multi.communication.translator.event.*;import cz.cuni.amis.pogamut.base3d.worldview.object.*;import cz.cuni.amis.pogamut.base3d.worldview.object.event.*;import cz.cuni.amis.pogamut.ut2004.communication.messages.*;import cz.cuni.amis.pogamut.ut2004.communication.worldview.objects.*;import cz.cuni.amis.pogamut.ut2004multi.communication.worldview.objects.*;import cz.cuni.amis.pogamut.ut2004.communication.translator.itemdescriptor.*;import cz.cuni.amis.pogamut.ut2004.communication.messages.ItemType.Category;import cz.cuni.amis.pogamut.unreal.communication.messages.UnrealId;import cz.cuni.amis.utils.exception.*;import cz.cuni.amis.pogamut.base.communication.translator.event.IWorldObjectUpdateResult.Result;import cz.cuni.amis.utils.SafeEquals;import cz.cuni.amis.pogamut.base.agent.*;import cz.cuni.amis.pogamut.multi.agent.*;import cz.cuni.amis.pogamut.multi.communication.worldview.property.*;import cz.cuni.amis.pogamut.ut2004multi.communication.worldview.property.*;import cz.cuni.amis.utils.token.*;import cz.cuni.amis.utils.*;

            public class UT2004SharedObjectCreator {
	
				public static interface ISharedObjectCreator<T extends ICompositeWorldObject>
				{
					public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c);
				}
				
				
					public static class AliveMessageSharedCreator implements ISharedObjectCreator<AliveMessage>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new AliveMessageSharedImpl(id, c);
						}
					}
				
					public static class AutoTraceRaySharedCreator implements ISharedObjectCreator<AutoTraceRay>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new AutoTraceRaySharedImpl(id, c);
						}
					}
				
					public static class BombInfoSharedCreator implements ISharedObjectCreator<BombInfo>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new BombInfoSharedImpl(id, c);
						}
					}
				
					public static class ConfigChangeSharedCreator implements ISharedObjectCreator<ConfigChange>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new ConfigChangeSharedImpl(id, c);
						}
					}
				
					public static class EntitySharedCreator implements ISharedObjectCreator<Entity>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new EntitySharedImpl(id, c);
						}
					}
				
					public static class FlagInfoSharedCreator implements ISharedObjectCreator<FlagInfo>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new FlagInfoSharedImpl(id, c);
						}
					}
				
					public static class GameInfoSharedCreator implements ISharedObjectCreator<GameInfo>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new GameInfoSharedImpl(id, c);
						}
					}
				
					public static class IncomingProjectileSharedCreator implements ISharedObjectCreator<IncomingProjectile>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new IncomingProjectileSharedImpl(id, c);
						}
					}
				
					public static class InitedMessageSharedCreator implements ISharedObjectCreator<InitedMessage>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new InitedMessageSharedImpl(id, c);
						}
					}
				
					public static class ItemSharedCreator implements ISharedObjectCreator<Item>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new ItemSharedImpl(id, c);
						}
					}
				
					public static class MoverSharedCreator implements ISharedObjectCreator<Mover>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new MoverSharedImpl(id, c);
						}
					}
				
					public static class MyInventorySharedCreator implements ISharedObjectCreator<MyInventory>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new MyInventorySharedImpl(id, c);
						}
					}
				
					public static class NavPointSharedCreator implements ISharedObjectCreator<NavPoint>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new NavPointSharedImpl(id, c);
						}
					}
				
					public static class PlayerSharedCreator implements ISharedObjectCreator<Player>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new PlayerSharedImpl(id, c);
						}
					}
				
					public static class SelfSharedCreator implements ISharedObjectCreator<Self>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new SelfSharedImpl(id, c);
						}
					}
				
					public static class TeamScoreSharedCreator implements ISharedObjectCreator<TeamScore>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new TeamScoreSharedImpl(id, c);
						}
					}
				
					public static class VehicleSharedCreator implements ISharedObjectCreator<Vehicle>
					{
						@Override
						public ISharedWorldObject create(WorldObjectId id, Collection<ISharedProperty> c) {
							return new VehicleSharedImpl(id, c);
						}
					}
				
				
				private static HashMap<Class, ISharedObjectCreator> map = new HashMap<Class, ISharedObjectCreator>();
	
				static {
					
						map.put(
							AliveMessage
							.class, 
							new AliveMessageSharedCreator()
						);
					
						map.put(
							AutoTraceRay
							.class, 
							new AutoTraceRaySharedCreator()
						);
					
						map.put(
							BombInfo
							.class, 
							new BombInfoSharedCreator()
						);
					
						map.put(
							ConfigChange
							.class, 
							new ConfigChangeSharedCreator()
						);
					
						map.put(
							Entity
							.class, 
							new EntitySharedCreator()
						);
					
						map.put(
							FlagInfo
							.class, 
							new FlagInfoSharedCreator()
						);
					
						map.put(
							GameInfo
							.class, 
							new GameInfoSharedCreator()
						);
					
						map.put(
							IncomingProjectile
							.class, 
							new IncomingProjectileSharedCreator()
						);
					
						map.put(
							InitedMessage
							.class, 
							new InitedMessageSharedCreator()
						);
					
						map.put(
							Item
							.class, 
							new ItemSharedCreator()
						);
					
						map.put(
							Mover
							.class, 
							new MoverSharedCreator()
						);
					
						map.put(
							MyInventory
							.class, 
							new MyInventorySharedCreator()
						);
					
						map.put(
							NavPoint
							.class, 
							new NavPointSharedCreator()
						);
					
						map.put(
							Player
							.class, 
							new PlayerSharedCreator()
						);
					
						map.put(
							Self
							.class, 
							new SelfSharedCreator()
						);
					
						map.put(
							TeamScore
							.class, 
							new TeamScoreSharedCreator()
						);
					
						map.put(
							Vehicle
							.class, 
							new VehicleSharedCreator()
						);
										
				}				
				
				public static ISharedWorldObject create(Class msgClass, WorldObjectId objectId, Collection<ISharedProperty> properties )
				{
					NullCheck.check(msgClass, "msgClass");
					NullCheck.check(objectId, "objectId");
					NullCheck.check(properties, "properties");
					
					ISharedObjectCreator creator = map.get(msgClass);
					if (creator == null) {
					    throw new PogamutException("There is no shared obejct creator for class " + msgClass + ".", UT2004SharedObjectCreator.class);
					}
					return creator.create(objectId, properties);
				}
			}
    	